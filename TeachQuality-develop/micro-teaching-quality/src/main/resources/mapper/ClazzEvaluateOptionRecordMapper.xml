<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vtmer.microteachingquality.mapper.ClazzEvaluateOptionRecordMapper">
    <resultMap id="BaseResultMap" type="com.vtmer.microteachingquality.model.entity.ClazzEvaluateOptionRecord">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="clazz_id" jdbcType="INTEGER" property="clazzId"/>
        <result column="evaluation_option_id" jdbcType="INTEGER" property="evaluationOptionId"/>
        <result column="mark" jdbcType="VARCHAR" property="mark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, clazz_id, evaluation_option_id, mark, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from clazz_evaluate_option_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByClazzIdAndUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from clazz_evaluate_option_record
        where clazz_id= #{clazzId,jdbcType=INTEGER}
        and user_id= #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from clazz_evaluate_option_record
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByClazzIdAndUserId">
        delete
        from clazz_evaluate_option_record
        where user_id = #{userId}
          and clazz_id = #{clazzId}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.vtmer.microteachingquality.model.entity.ClazzEvaluateOptionRecord"
            useGeneratedKeys="true">
        insert into clazz_evaluate_option_record (user_id, clazz_id, evaluation_option_id,
                                                  mark, create_time, update_time)
        values (#{userId,jdbcType=INTEGER}, #{clazzId,jdbcType=INTEGER}, #{evaluationOptionId,jdbcType=INTEGER},
                #{mark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.vtmer.microteachingquality.model.entity.ClazzEvaluateOptionRecord"
            useGeneratedKeys="true">
        insert into clazz_evaluate_option_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="clazzId != null">
                clazz_id,
            </if>
            <if test="evaluationOptionId != null">
                evaluation_option_id,
            </if>
            <if test="mark != null">
                mark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="clazzId != null">
                #{clazzId,jdbcType=INTEGER},
            </if>
            <if test="evaluationOptionId != null">
                #{evaluationOptionId,jdbcType=INTEGER},
            </if>
            <if test="mark != null">
                #{mark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <insert id="insertList" keyColumn="id" keyProperty="id"
            parameterType="com.vtmer.microteachingquality.model.entity.ClazzEvaluateOptionRecord"
            useGeneratedKeys="true">
        insert into clazz_evaluate_option_record (user_id, clazz_id, evaluation_option_id, mark, create_time,
        update_time)
        values
        <foreach collection="list" separator="),(" item="record" open="(" close=")">
            #{record.userId},#{record.clazzId},#{record.evaluationOptionId},#{record.mark},#{record.createTime},#{record.updateTime}
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.vtmer.microteachingquality.model.entity.ClazzEvaluateOptionRecord">
        update clazz_evaluate_option_record
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="clazzId != null">
                clazz_id = #{clazzId,jdbcType=INTEGER},
            </if>
            <if test="evaluationOptionId != null">
                evaluation_option_id = #{evaluationOptionId,jdbcType=INTEGER},
            </if>
            <if test="mark != null">
                mark = #{mark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.vtmer.microteachingquality.model.entity.ClazzEvaluateOptionRecord">
        update clazz_evaluate_option_record
        set user_id              = #{userId,jdbcType=INTEGER},
            clazz_id             = #{clazzId,jdbcType=INTEGER},
            evaluation_option_id = #{evaluationOptionId,jdbcType=INTEGER},
            mark                 = #{mark,jdbcType=VARCHAR},
            create_time          = #{createTime,jdbcType=TIMESTAMP},
            update_time          = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>